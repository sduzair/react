name: Merge branches on push into master # ensure dev branches have all new files in uniquely named folders

on:
  push:
    branches:
      - "**" # Triggers on commits to any branch
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write # Allow write access to repository contents

jobs:
  merge-branches:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches

      - name: Configure Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Fetch all remote branches
        run: |
          git fetch --all
        shell: pwsh

      - name: Merge branches into master
        run: |
          $currentBranch = git rev-parse --abbrev-ref HEAD
          Write-Host "Current branch: $currentBranch"
          Write-Host "Checkout into master..."
          git checkout master
          Write-Host "Current branch: master"
          git fetch origin

          git branch -r | Where-Object { $_ -notmatch 'origin/HEAD' -and $_ -notmatch "origin/master" } | ForEach-Object {
            $remoteBranch = $_.Trim()
            Write-Host "Attempting to merge remote branch: $remoteBranch"
            
            git merge --no-commit --no-ff $remoteBranch
            
            if (git diff --name-only --diff-filter=U) {
              Write-Host "Merge conflict detected with $remoteBranch. Attempting to resolve..."
              
              # Auto-resolve conflicts by favoring incoming changes
              git checkout --theirs .
              git add .
              
              # Commit the merge
              git commit -m "Merged $remoteBranch into master (auto-resolved)"
              
              Write-Host "Conflict resolved and changes committed."
            } else {
              Write-Host "Successfully merged $remoteBranch into master."
              git commit -m "Merged $remoteBranch into master"
            }
          }

          git push origin master
        shell: pwsh

      - name: Push changes
        run: git push
